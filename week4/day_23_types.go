package week4

// DistanceMatrix specifies the distance from each space to any other space.
//
// ####################################
// # 00 01 02 03 04 05 06 07 08 09 10 #
// ####### 11 ## 13 ## 15 ## 17 #######
//       # 12 ## 14 ## 16 ## 18 #
//       ########################
var DistanceMatrix = [][]int{
	{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 3, 4, 5, 6, 7, 8, 9, 10},
	{1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 2, 3, 4, 5, 6, 7, 8, 9},
	{2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8},
	{3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 2, 3, 2, 3, 4, 5, 6, 7},
	{4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 3, 4, 1, 2, 3, 4, 5, 6},
	{5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 4, 5, 2, 3, 2, 3, 4, 5},
	{6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 3, 4, 1, 2, 3, 4},
	{7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 6, 7, 4, 5, 2, 3, 2, 3},
	{8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 7, 8, 5, 6, 3, 4, 1, 2},
	{9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 8, 9, 6, 7, 4, 5, 2, 3},
	{10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 9, 10, 7, 8, 5, 6, 3, 4},
	{3, 2, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 4, 5, 6, 7, 8, 9},
	{4, 3, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 0, 5, 6, 7, 8, 9, 10},
	{5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 4, 5, 0, 1, 4, 5, 6, 7},
	{6, 5, 4, 3, 2, 3, 4, 5, 6, 7, 8, 5, 6, 1, 0, 5, 6, 7, 8},
	{7, 6, 5, 4, 3, 2, 1, 2, 3, 4, 5, 6, 7, 4, 5, 0, 1, 4, 5},
	{8, 7, 6, 5, 4, 3, 2, 3, 4, 5, 6, 7, 6, 5, 6, 1, 0, 5, 6},
	{9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 3, 8, 9, 6, 7, 4, 5, 0, 1},
	{10, 9, 8, 7, 6, 5, 4, 3, 2, 3, 4, 9, 10, 7, 8, 5, 6, 1, 0},
}

// BurrowEdges are the edges between spaces in the burrow.
var BurrowEdges = [][]int{
	{0, 1},
	{1, 2},
	{2, 3},
	{3, 4},
	{4, 5},
	{5, 6},
	{6, 7},
	{7, 8},
	{8, 9},
	{9, 10},
	{2, 11},
	{11, 12},
	{4, 13},
	{13, 14},
	{6, 15},
	{15, 16},
	{8, 17},
	{17, 18},
}

// Types of amphipods.
const (
	Amber = iota
	Bronze
	Copper
	Desert
)

// EnergyByType is the amount of energy each amphipod uses.
var EnergyByType = map[int]int{
	Amber:  1,
	Bronze: 10,
	Copper: 100,
	Desert: 1000,
}
